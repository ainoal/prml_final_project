
function [data_out] = preprocessing(data, rotation_mode)
    %Input: data as mxn matrix, rotation mode integer either 1 or 0.
    % Rot mode = 0: Data will be filtered using bandpass, normalized and
    % passed.
    % Rot mode = 1: Data will be randomly rotated around z, using a random
    % angle within the range defined in the function. (Currently set to -7
    % deg - 7 deg as most optimal resultswere achieved with these values
    min_rotation_angle = deg2rad(-7);
    max_rotation_angle = deg2rad(7);
    
    if rotation_mode == 1
        %rotation of data
        data_out=rotate_data(data(:,1:size(data,2)-1),min_rotation_angle,max_rotation_angle);
        
    else
        
        data_out = data;
        data2d=data_out(:,1:2);
        
        % Apllying Bandpass filter on data (H1*H2 = H, see documentation)
        
        % 1: Lowpass
        b2 = 1;
        a2 = [1 -0.7];
        data2d = filter(b2,a2,data2d,[],1);
        
        % 2: Highpass
        b1 = [1 0.9];
        a1 = 1;
        data2d = filter(b1,a1,data2d,[],1);

        data_out(:,1:2) = data2d;
        data_out = normalize(data_out,1);
    end
end



function [data_out] = rotate_data(data,min_thet,max_thet)
    %input: mxn matrix, minimum angle i (int), maximum
    vel_data = data(:,4:size(data,2));
    data = data(:,1:3);
    theta = min_thet+((max_thet-min_thet).*(rand));
    R = [cos(theta) -sin(theta) 0;
         sin(theta) cos(theta) 0;
         0  0 1];
    data_out = [data*R vel_data];
end

